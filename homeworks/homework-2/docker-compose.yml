version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  filestorage-service:
    build:
      context: ./FileStorageService
    container_name: filestorage_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/filestorage_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      FILESTORAGE_PATH: /app/storage
    volumes:
      - ./storage:/app/storage
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy

  fileanalysis-service:
    build:
      context: ./FileAnalysisService
    container_name: fileanalysis_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fileanalysis_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      FILESTORAGE_SERVICE_URL: http://filestorage-service:8080
    ports:
      - "8082:8080"
    depends_on:
      - filestorage-service

volumes:
  postgres_data:
